{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6e2952a9-913c-4eef-8dfa-0507309eb90d",
   "metadata": {},
   "source": [
    "# Hubbard Model by UCCSD"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1344f070-630d-49ab-999d-ff6dc1c31f02",
   "metadata": {},
   "source": [
    "## Overview\n",
    "\n",
    "In this notebook, we will demonstrate how to use the `from_integral` method of the `UCC` class to solve half-filled Hubbard model\n",
    "$$\n",
    "\\hat H = -t \\sum_{j, \\sigma} (\\hat c^\\dagger_{j+1, \\sigma} \\hat c_{j, \\sigma} + \\hat c^\\dagger_{j, \\sigma} \\hat c_{j+1, \\sigma}) + U \\sum_j \\hat n_{j↑} \\hat n_{j↓}\n",
    "$$\n",
    "\n",
    "using UCCSD. The results show that UCCSD is better than CCSD in capturing strong correlation, yet the accuracy is still not satisfactory.\n",
    "\n",
    "We also highlight that the `from_integral` method is a flexible interface for cutomized Hamiltonian."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d99ad0f6-1280-4853-93cb-5f4f2b472630",
   "metadata": {},
   "source": [
    "## Setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1119cfc3-0e58-409c-852b-fadb87246e3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5])"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "from tencirchem import UCCSD\n",
    "\n",
    "# number of sites\n",
    "n = 6\n",
    "# half filled\n",
    "n_elec = n\n",
    "\n",
    "# scan U/t from 0.5 to 8.5\n",
    "t = 1\n",
    "U_array = np.linspace(0.5, 8.5, 9)\n",
    "U_array / t"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20a04916-a709-49aa-bb88-d3f4463011e9",
   "metadata": {},
   "source": [
    "## Calculate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f87e468c-a22e-4bbc-b7ed-b742eb246f3a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Calculating U = 0.5\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n",
      "Calculating U = 1.5\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n",
      "Calculating U = 2.5\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n",
      "Calculating U = 3.5\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n",
      "Calculating U = 4.5\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n",
      "Calculating U = 5.5\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n",
      "Calculating U = 6.5\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n",
      "Calculating U = 7.5\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n",
      "Calculating U = 8.5\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH\n"
     ]
    }
   ],
   "source": [
    "# stores results\n",
    "e_hf_list = []\n",
    "e_ccsd_list = []\n",
    "e_uccsd_list = []\n",
    "e_fci_list = []\n",
    "\n",
    "for U in U_array:\n",
    "    print(f\"Calculating U = {U}\")\n",
    "\n",
    "    # set the integrals\n",
    "    int1e = np.zeros((n, n))\n",
    "    for i in range(n - 1):\n",
    "        int1e[i, i + 1] = int1e[i + 1, i] = -t\n",
    "    int1e[n - 1, 0] = int1e[0, n - 1] = -t\n",
    "    int2e = np.zeros((n, n, n, n))\n",
    "    for i in range(n):\n",
    "        int2e[i, i, i, i] = U\n",
    "\n",
    "    # do the calculation\n",
    "    uccsd = UCCSD.from_integral(int1e, int2e, n_elec)\n",
    "    uccsd.kernel()\n",
    "    print(uccsd.opt_res.message)\n",
    "\n",
    "    # record result\n",
    "    e_hf_list.append(uccsd.e_hf)\n",
    "    e_ccsd_list.append(uccsd.e_ccsd)\n",
    "    e_uccsd_list.append(uccsd.e_uccsd)\n",
    "    e_fci_list.append(uccsd.e_fci)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c38ebbf8-407d-41c9-bedb-a8f0ce454f45",
   "metadata": {},
   "source": [
    "## Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "20fc2c4a-93a1-4fd5-95d2-9d7e2fe0e4a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "import mpl_config\n",
    "\n",
    "plt.plot(U_array, e_hf_list, marker=\"o\", label=\"RHF\", linestyle=\"--\")\n",
    "plt.plot(U_array, e_ccsd_list, marker=\"d\", label=\"CCSD\", linestyle=\"--\")\n",
    "plt.plot(U_array, e_uccsd_list, marker=\"s\", label=\"UCCSD\", linestyle=\"--\")\n",
    "plt.plot(U_array, e_fci_list, marker=\" \", label=\"FCI\", linestyle=\"--\")\n",
    "plt.legend()\n",
    "plt.xlabel(\"$U/t$\")\n",
    "plt.ylabel(\"$E/t$\")\n",
    "plt.savefig(\"hubbard.pdf\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9640bf24-b832-4b23-8f81-066b1a090c1c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}